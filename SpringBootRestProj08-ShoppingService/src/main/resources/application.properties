# =========================
# Service Configuration
# =========================
spring.application.name=shopping-service
server.port=9091

# =========================
# Eureka Client
# =========================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# =========================
# Actuator Configuration
# =========================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# =========================
# Resilience4j Circuit Breaker Configuration
# =========================
# Register health indicator for circuit breaker
resilience4j.circuitbreaker.instances.shoppingServiceCB.registerHealthIndicator=true

# Sliding window settings (COUNT_BASED means it counts calls instead of time)
resilience4j.circuitbreaker.instances.shoppingServiceCB.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.shoppingServiceCB.slidingWindowSize=5

# Minimum number of calls before circuit breaker calculates failure rate
resilience4j.circuitbreaker.instances.shoppingServiceCB.minimumNumberOfCalls=3

# Failure rate threshold (in %)
resilience4j.circuitbreaker.instances.shoppingServiceCB.failureRateThreshold=50

# Time the circuit stays OPEN before trying again
resilience4j.circuitbreaker.instances.shoppingServiceCB.waitDurationInOpenState=5s

# Number of test calls allowed in HALF_OPEN state
resilience4j.circuitbreaker.instances.shoppingServiceCB.permittedNumberOfCallsInHalfOpenState=2

# Consider a call as "slow" if it takes longer than this
resilience4j.circuitbreaker.instances.shoppingServiceCB.slowCallDurationThreshold=2s

# If slow calls exceed this % in the sliding window, breaker opens
resilience4j.circuitbreaker.instances.shoppingServiceCB.slowCallRateThreshold=50
